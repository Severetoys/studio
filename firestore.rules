rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check for admin privileges
    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.isAdmin == true;
    }

    // Product rules
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Video rules
    match /videos/{videoId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Photo gallery rules
    match /photos/{photoId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Review rules
    match /reviews/{reviewId} {
      allow create: if request.resource.data.status == 'pending';
      allow read: if resource.data.status == 'approved';
      allow update, delete: if isAdmin();
    }

    // Chat rules
    match /chats/{chatId} {
      function isOwner() {
        return request.auth != null && request.auth.uid == chatId.split('secret-chat-')[1];
      }

      allow read, write: if isOwner() || isAdmin();

      match /messages/{messageId} {
        allow read, write: if isOwner() || isAdmin();
      }
    }

    // Visitor tracking rules
    match /visitors/{visitorId} {
      allow read, create, update: if true;
    }

    // Default deny rule
    match /{document=**} {
      allow read, write: if false;
    }
  }
}